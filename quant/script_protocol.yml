server-schedular:
  - cmd : server.schedular.exit # server exit
  -
    cmd : server.schedular.database.select # select the stocks by specific sql, returns top 300 ordered by 5_days_offset by default
    params:
      - sql: string # specific sql to find stock
  -
    cmd: server.schedular.database.ask.each # for-each all stocks to filter witch is need
    params:
      - limit: int # 300 for default
    callback:
      cmd: server.callback.schedular.database.ask.each
      param: json_list
  -
    cmd: server.schedular.do.at # call at specific time
    params:
      - h: int
      - m: int

client:
  -
    cmd: client.call.standby # let schedular server know the to_do list
    params:
      -
        cmds: list # cmd to_do list
  -
    cmd: client.call.account.info
    callback:
      cmd: server.callback.account.info
      params:
        total_balance: float
        holding_stocks: json # eg: { code: 000001, profit: -0.1 }
        can_buy: int # 0 for can't
  -
    cmd: client.call.trading.buy
    params:
      -
        stock_code: string
        buy_percent: float # percent of total balance
    callback:
      cmd: server.callback.trading.buy
      params:
        - succeed: int # is buy succeed or not
        - reason: string
  -
    cmd: client.call.trading.sell
    params:
      - stock_code: string
    callback:
      cmd: server.callback.trading.sell
      params:
        - succeed: int # is sell succeed or not
        - reason: string

