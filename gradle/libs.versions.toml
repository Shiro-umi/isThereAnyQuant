# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
agp = "8.11.2"
kotlin = "2.2.20"
guava = "33.0.0-jre"
koog = "0.4.1"
kotlin-coroutines = "1.10.2"
kotlin-serialization = "1.8.0"
kotlin-datetime = "0.6.1"
ktorClientCore = "2.3.6"
ktorfit-version = "2.6.4"
ktorSerializationKotlinxJson = "2.3.6"
retrofit = "2.9.0"
okhttp = "5.0.0-alpha.11"
retrofit-kotlin-serialization-converter = "1.0.0"
ktor-version = "3.3.0"
exposed = "1.0.0-beta-5"
h2 = "2.2.224"
composeHotReload = "1.0.0-beta07"
composeMultiplatform = "1.9.0"
androidx-activity = "1.11.0"
androidx-lifecycle = "2.9.4"
seleniumJava = "4.35.0"

[bundles]
ktor-server = [
    "ktor-serialization-kotlinx-json",
    "ktor-server-config-yaml",
    "ktor-server-content-negotiation",
    "ktor-server-websocket",
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-network",
    "ktor-server-logging-jvm"
]
ktor-client = [
    "ktor-client-cio",
    "ktor-client-core",
    "ktor-client-websocket"
]


[libraries]
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }
jdbc = { module = "mysql:mysql-connector-java", version = "8.0.33" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-version" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor-version" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit-version" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit-version" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit-kotlin-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlin-serialization-converter" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-version" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-version" }
ktor-server-websocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor-version" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-version" }
#ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-version" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor-version" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-version" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-version" }
ktor-client-websocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor-version" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor-version" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-version" }
quartz-scheduler = { module = "org.quartz-scheduler:quartz", version = "2.5.0" }
jetbrains-exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
jetbrains-exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
jetbrains-exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
jetbrains-koog = { module = "ai.koog:koog-agents", version.ref = "koog" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlin-coroutines" }
selenium-devtools-v139 = { module = "org.seleniumhq.selenium:selenium-devtools-v139", version.ref = "seleniumJava" }
selenium-java = { module = "org.seleniumhq.selenium:selenium-java", version.ref = "seleniumJava" }
ktor-server-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor-version" }
logback = { module = "ch.qos.logback:logback-classic", version = "1.5.6" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit-version" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version = "2.2.20-2.0.3" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }